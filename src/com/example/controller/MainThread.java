package com.example.controller;import java.util.Collection;import java.util.List;import net.tsz.afinal.FinalBitmap;import android.content.Context;import android.os.AsyncTask;import com.asht.AsHt;import com.asht.AsHtException;import com.asht.adapter.MyCasesAdapter;import com.asht.adapter.MyCasesAdapter.MyCasesItemView;import com.asht.model.CaseView;import com.asht.model.Record;import com.asht.model.Resume;import com.asht.model.UserInfo;import com.asht.utl.ApplictionManager;import com.asht.utl.Settings;public class MainThread {	static MainThread mainThread = null;	private MessageQueue mQueue = null;	private Context mContext;	FinalBitmap mBitmap;	private MainThread(Context context) {		mQueue = new MessageQueue();		mContext = context;		mBitmap = FinalBitmap.create(mContext);		thread.start();	}	public static MainThread getInit(Context context) {		if (mainThread == null) {			mainThread = new MainThread(context);		}		return mainThread;	}	Thread thread = new Thread(new Runnable() {		@Override		public void run() {			while (true) {				updateResumes();			}		}	});	public void add(Object o) {		mQueue.add(o);	}	CaseView cv;	private void updateResumes() {		CaseView caseView = ((CaseView) mQueue.getElement());		if (caseView == null) {			return;		}		if (cv == null) {			cv = caseView;		} else if (cv.getRecord().equals(caseView.getRecord())) {			return;		}		if (cv.getRecord() == null) {			return;		}		new AsyncTask<Void, Void, List<Resume>>() {			@Override			protected List<Resume> doInBackground(Void... params) {				System.out.println("```````111111");				AsHt asht = AsHt.getInstance();				UserInfo user = ApplictionManager.getInstance().getUserInfo();				try {					final List<Resume> resumes = asht.getAllCaseFromGroup(user,							cv.getRecord().getMedicalRecordGroupID());					AFinalController.getDB(mContext).deleteByWhere(							Resume.class,							"imedicalrecordgroupid = "									+ cv.getRecord().getMedicalRecordGroupID()									+ " and state <> " + 2);					for (Resume resume : resumes) {						AFinalController.getDB(mContext).save(resume);					}					System.out.println("```````3333333");					return resumes;				} catch (AsHtException e) {					e.printStackTrace();				}				System.out.println("```````2222222222");				return null;			}			@Override			protected void onPostExecute(List<Resume> result) {				super.onPostExecute(result);				System.out.println("```````4444444");				if (result == null) {				} else {					int size = result.size();					if (size == 0) {						return;					}					Record r = cv.getRecord();					if (r != null) {						switch (result.size()) {						case 0:							r.setImg1(null);							break;						case 1:							r.setImg1(result.get(size - 1).getMinFileName());							r.setImg2(null);							break;						case 2:							r.setImg1(result.get(size - 1).getMinFileName());							r.setImg2(result.get(size - 2).getMinFileName());							r.setImg3(null);							break;						case 3:							r.setImg1(result.get(size - 1).getMinFileName());							r.setImg2(result.get(size - 2).getMinFileName());							r.setImg3(result.get(size - 3).getMinFileName());							r.setImg4(null);							break;						case 4:							r.setImg1(result.get(size - 1).getMinFileName());							r.setImg2(result.get(size - 2).getMinFileName());							r.setImg3(result.get(size - 3).getMinFileName());							r.setImg4(result.get(size - 4).getMinFileName());							break;						}					}//					if (cv.getView() == null) {//						MyCasesAdapter.getWH();//						int wh[] = MyCasesAdapter.getWH();//						MyCasesItemView myCasesItemView = cv.getView();//						mBitmap.display(myCasesItemView.iv1, Settings.WEB_URL//								+ r.getImg1(), wh[0] / 4, wh[1] / 4);//						mBitmap.display(myCasesItemView.iv2, Settings.WEB_URL//								+ r.getImg2(), wh[0] / 4, wh[1] / 4);//						mBitmap.display(myCasesItemView.iv3, Settings.WEB_URL//								+ r.getImg3(), wh[0] / 4, wh[1] / 4);//						mBitmap.display(myCasesItemView.iv4, Settings.WEB_URL//								+ r.getImg4(), wh[0] / 4, wh[1] / 4);//						return;//					}					r.setIsUpdate(0);					AFinalController.getDB(mContext).update(r);					mQueue.remove(cv);				}			}		}.execute();	}}